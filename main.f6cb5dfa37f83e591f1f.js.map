{"version":3,"sources":["webpack:///./js/startTimer.js","webpack:///./js/myTimer.js"],"names":["timer","selector","targetDate","this","Date","daysSpan","document","querySelector","hoursSpan","minutesSpan","secondsSpan","_padZero","value","_countDowm","currentTime","_createSpanValue","showTime","setInterval","time","textContent","Math","floor","startBtn","addEventListener","setAttribute"],"mappings":"6HAIOA,EAAQ,I,WCFb,cAGG,IAFDC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAC,KAAKD,WAAa,IAAIE,KAAKF,GAC3BC,KAAKE,SAAWC,SAASC,cAAiBN,EAA1B,8BAChBE,KAAKK,UAAYF,SAASC,cAAiBN,EAA1B,+BACjBE,KAAKM,YAAcH,SAASC,cAAiBN,EAA1B,8BACnBE,KAAKO,YAAcJ,SAASC,cAAiBN,EAA1B,8B,2BAIrBU,SAAA,SAASC,GACP,OAAOA,EAAQ,GAAR,IAAiBA,EAAUA,G,EAEpCC,WAAA,WACE,IAAMC,EAAc,IAAIV,KACxBD,KAAKY,iBAAiBD,I,EAGxBE,SAAA,WAAW,WACTC,aAAY,kBAAM,EAAKJ,eAAc,M,EAGvCE,iBAAA,SAAiBD,GACf,IAAMI,EAAOf,KAAKD,WAAaY,EAC/BX,KAAKE,SAASc,YAAchB,KAAKQ,SAASS,KAAKC,MAAMH,EAAO,QAC5Df,KAAKK,UAAUW,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,MAAR,OACtDf,KAAKM,YAAYU,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,KAAR,MACxDf,KAAKO,YAAYS,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,IAAe,O,KD3BpE,CAAmB,CAC/BjB,SAAU,WACVC,WAAY,aAGRoB,EAAWhB,SAASC,cAAc,6BACxCe,EAASC,iBAAiB,SAE1B,WACED,EAASE,aAAa,WAAY,IAClCxB,EAAMgB,c","file":"main.f6cb5dfa37f83e591f1f.js","sourcesContent":[" import\n CountdownTimer\n from \"./myTimer\";\n\n const timer = new CountdownTimer({\n   selector: \"#timer-1\",\n   targetDate: \"2022,1,1\",\n });\n\n const startBtn = document.querySelector(\"button[data-action-start]\");\n startBtn.addEventListener(\"click\", startTimer);\n\n function startTimer() {\n   startBtn.setAttribute('disabled', '')\n   timer.showTime();\n }\n","export default\nclass CountdownTimer {\n  constructor({\n    selector,\n    targetDate\n  }) {\n    this.targetDate = new Date(targetDate);\n    this.daysSpan = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hoursSpan = document.querySelector(`${selector} .value[data-value=\"hours\"]`);\n    this.minutesSpan = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.secondsSpan = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n\n  }\n  \n  _padZero(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n  _countDowm() {\n    const currentTime = new Date();\n    this._createSpanValue(currentTime);\n  }\n\n  showTime() {\n    setInterval(() => this._countDowm(), 1000);\n  }\n\n  _createSpanValue(currentTime) {\n    const time = this.targetDate - currentTime;\n    this.daysSpan.textContent = this._padZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    this.hoursSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    this.minutesSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    this.secondsSpan.textContent = this._padZero(Math.floor((time % (1000 * 60)) / 1000));\n\n  }\n}\n"],"sourceRoot":""}